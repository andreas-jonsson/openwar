language: go

go:
    - 1.8
    # - tip

os:
    - linux
    - osx

notifications:
    email:
        on_success: never
        on_failure: always

branches:
    only:
        - master

env:
    - OPENWAR_VERSION=0.0.1

install:
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install dylibbundler; fi
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt-get install -y rpl; fi

    - export SDL_PREFIX=/usr/local && ./tools/sdl_from_source.sh

    #- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then go get golang.org/x/mobile/cmd/gomobile && go get github.com/gopherjs/gopherjs; fi
    #- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then gomobile init; fi

    - go get -v

script:
    - go build

    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then ./tools/package/build_app.sh; fi
    #- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then ./tools/dropbox/dropbox_uploader.sh upload OpenWar.zip Public; fi

    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then ./tools/package/build_deb.sh; fi
    #- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then ./tools/dropbox/dropbox_uploader.sh upload openwar_$OPENWAR_VERSION-$TRAVIS_BUILD_NUMBER.deb Public/openwar_$OPENWAR_VERSION.deb; fi

    #- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then cp ./tools/package/AndroidManifest.xml ./ && gomobile build -target=android -tags=mobile; fi
    #- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then ./tools/dropbox/dropbox_uploader.sh upload openwar.apk Public; fi

    #- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then $GOPATH/bin/gopherjs build openwar.go; fi
    #- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then ./tools/dropbox/dropbox_uploader.sh upload openwar.js Public && ./tools/dropbox/dropbox_uploader.sh upload openwar.js.map Public; fi

deploy:
    provider: releases
    file:
        #- openwar_$OPENWAR_VERSION.deb
        #- OpenWar.zip
        - README.md
    skip_cleanup: true
    overwrite: true
    prerelease: true
    on:
        tags: false
        repo: andreas-jonsson/openwar
    api-key:
        secure: NoWX5qDkRyayNXBlesH5sgcNYtxOdYLp5LK6Fmk93dLxSy69nAzUJsYTC5Sscv3XRwn0FeMbaos8vaip06JAxpxBWrKPvqNG1f4M5cMHY8Pmn9jaSknQbW+6Mdi8Opa6oEJzFRNd5Tc4S6wt7wzvByZyA9rZFdYLbOdxsI+oOWEXtkHPtf+Va9NlaERBhukEU7vmE553JzP6P/urEH3jjPcR9Z7f5Q3IoVUkRFHp+9oUWf/GPTJ/XMbmG5LKLGNqpGT4IF7zXsnocniB2HGsB+bXk93+5X8q7zD7HLb/EkRYD+GetCeWnEUYXHICumy37Dbpk4vJ3r82yPYPG0ngiVFaS8vorP3NV/HYNV72vDlltHGSJyE5dxvfBRedvFsg/lDO/Uo4jPx0rRd19kRPdk012kMMVADxAfjdCw0Xba7b6Jh0eEMKVFswGFcSxSzw6A9cwJhBfI01aKe9fgfVtHFlH1k1TxqUAmCeYBQZxGCqS6DiYJfkjYk5XaEhPUMgApCE4+awxgeQUnGagFw6AcyseCS17dfydz6unW68/axdzAEYsNDT62zMgar3DME8kY0dKZbiu5fjQqkC/yXwQ37fxotAiPgwnuQpe7uHC3khFSltgy/+xWFouTkr5I922ygSPz/YRbx74n2vnZcsJIqpm2M+1/4g5ivorWthOzY=
